
@startuml
/*Generated by ChatGpt*/
class Containers2d {
  - m_Width: int
  - m_Height: int
  - m_RandomDevice: std::random_device
  - m_RandomEngine: std::mt19937
  - m_Distribution: std::uniform_real_distribution<double>
  + Containers2d(theWidth: int, theHeight: int)
  + ~Containers2d()
  + initializeContainerWithRandomNumbers(): void
  + processContainer(const theByRows: bool): long long
  # processContainerByRows(): void
  # processContainerByCols(): void
}

class Array1d {
  - m_Array1d: double*
  + Array1d(theWidth: int, theHeight: int)
  + ~Array1d()
  + initializeContainerWithRandomNumbers(): void
  # processContainerByRows(): void
  # processContainerByCols(): void
  # processArray1dByRows(theArray: double*): void
  # processArray1dByCols(theArray: double*): void
}

class Array2d {
  - m_Array2d: double**
  + Array2d(theWidth: int, theHeight: int)
  + ~Array2d()
  + initializeContainerWithRandomNumbers(): void
  # processContainerByRows(): void
  # processContainerByCols(): void
  # processArray2dByRows(theArray: double**): void
  # processArray2dByCols(theArray: double**): void
}

class Vector2d {
  - m_Vector2d: std::vector<std::vector<double>>
  + Vector2d(theWidth: int, theHeight: int)
  + ~Vector2d()
  + initializeContainerWithRandomNumbers(): void
  # processContainerByRows(): void
  # processContainerByCols(): void
  # processVector2dByRows(theVector: std::vector<std::vector<double>>): void
  # processVector2dByCols(theVector: std::vector<std::vector<double>>): void
}

Containers2d <|-- Array1d
Containers2d <|-- Array2d
Containers2d <|-- Vector2d
@enduml